{"version":3,"sources":["Components/Eyes.js","Components/Noses.js","App.js","serviceWorker.js","index.js"],"names":["Eyes","props","className","crazy","viewBox","d","number","Nose","onClick","onMouseEnter","onMouseLeave","Math","floor","random","App","state","link","handleClick","setState","handleMouseEnter","handleMouseLeave","this","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oOA+CeA,MA7Cf,SAAcC,GA0CV,MAFc,CArCd,yBAAKC,UAAWD,EAAME,MAAOC,QAAQ,eACjC,0BAAMC,EAAE,yIAER,0BAAMA,EAAE,wFAKZ,yBAAKH,UAAWD,EAAME,MAAOC,QAAQ,eACjC,0BAAMC,EAAE,4GAER,0BAAMA,EAAE,uIAKZ,yBAAKH,UAAWD,EAAME,MAAOC,QAAQ,eACjC,0BAAMC,EAAE,6HAER,0BAAMA,EAAE,qHAKZ,yBAAKH,UAAWD,EAAME,MAAOC,QAAQ,eACjC,0BAAMC,EAAE,sKAKZ,yBAAKH,UAAWD,EAAME,MAAOC,QAAQ,eACjC,0BAAMC,EAAE,sHAER,0BAAMA,EAAE,uIAMQJ,EAAMK,SCAfC,MA1Cf,SAAcN,GAuCV,MAFe,CAlCf,yBAAKC,UAAU,OAAOE,QAAQ,eAClC,0BAAMI,QAASP,EAAMO,QAASC,aAAcR,EAAMQ,aAAcC,aAAcT,EAAMS,aAAcL,EAAE,+LAKhG,yBAAKH,UAAU,OAAOE,QAAQ,eAClC,0BAAMI,QAASP,EAAMO,QAASC,aAAcR,EAAMQ,aAAcC,aAAcT,EAAMS,aAAcL,EAAE,wOAMhG,yBAAKH,UAAU,OAAOE,QAAQ,eAC1B,0BAAMI,QAASP,EAAMO,QAASC,aAAcR,EAAMQ,aAAcC,aAAcT,EAAMS,aAAcL,EAAE,+TAOxG,yBAAKH,UAAU,OAAOE,QAAQ,eAC1B,0BAAMI,QAASP,EAAMO,QAASC,aAAcR,EAAMQ,aAAcC,aAAcT,EAAMS,aAAcL,EAAE,6OAMxG,yBAAKH,UAAU,OAAOE,QAAQ,eAC1B,0BAAMI,QAASP,EAAMO,QAASC,aAAcR,EAAMQ,aAAcC,aAAcT,EAAMS,aAAcL,EAAE,qRAOnFJ,EAAMK,SCpC3BA,EAASK,KAAKC,MAAsB,EAAhBD,KAAKE,UAoCdC,E,4MAhCXC,MAAQ,CACJC,KAAMV,EACNH,OAAO,G,EAGXc,YAAc,WACVX,GAAUA,EAAS,EAAIK,KAAKC,MAAoB,IAAdD,KAAKE,UAAgB,GAAK,EAC5D,EAAKK,SAAS,CAACF,KAAMV,K,EAGzBa,iBAAmB,WACf,EAAKD,SAAS,CAACf,OAAO,K,EAG1BiB,iBAAmB,WACf,EAAKF,SAAS,CAACf,OAAO,K,uDAItB,OACI,oCACA,yBAAKD,UAAU,gBAAf,2CACJ,yBAAKA,UAAU,QACP,kBAAC,EAAD,CAAMI,OAAQA,EAAQE,QAASa,KAAKJ,YAAaR,aAAcY,KAAKF,iBAAkBT,aAAcW,KAAKD,mBACzG,kBAAC,EAAD,CAAMd,OAAQA,EAAQH,MAAOkB,KAAKN,MAAMZ,MAAQ,YAAc,SAC9D,yBAAKmB,IAAK,oBAAYD,KAAKN,MAAMC,KAAM,OAAQO,IAAK,+B,GA3BlDC,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ec1a826e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Eyes(props) {\r\n\r\nconst Eyes0 =\r\n    <svg className={props.crazy} viewBox=\"0 0 460 460\">\r\n        <path d=\"M244.085,183.458c10.169-5.932,23.729-14.407,33.051,0\r\nc0,0-8.386,4.292-16.525,4.292C256.75,187.75,244.085,183.458,244.085,183.458z\"/>\r\n        <path d=\"M192.5,192c0,0,3.75-9.25,17.75-6.25c0,0-4,5.5-5.25,6.25\r\nS197.5,195.5,192.5,192z\"/>\r\n    </svg>\r\n\r\nconst Eyes1 =\r\n    <svg className={props.crazy} viewBox=\"0 0 460 460\">\r\n        <path d=\"M291.333,230c0,0,22-11.667,31,8c0,0-7.254-1.335-9.333,0\r\n\tC309.576,240.198,292.333,236.333,291.333,230z\"/>\r\n        <path d=\"M356.333,242.667c0,0,15.666-12.667,22,3\r\n\tc0,0-0.666,3.667-3.333,4.667s-11.667-1.38-16.667-4.523S356.333,242.667,356.333,242.667z\"/>\r\n    </svg>\r\n\r\nconst Eyes2 =\r\n    <svg className={props.crazy} viewBox=\"0 0 460 460\">\r\n        <path d=\"M132.22,160.576c0,0-11.017-14.407-20.339,0\r\n\tc0,0,5.952,3.736,10.169,3.39C125.828,163.657,132.22,160.576,132.22,160.576z\"/>\r\n        <path d=\"M163.576,150.833c0,0,1.695-13.139,21.187-7.207\r\n\tc0,0-7.924,4.991-10.593,5.932S163.576,150.833,163.576,150.833z\"/>\r\n    </svg>\r\n\r\nconst Eyes3 =\r\n    <svg className={props.crazy} viewBox=\"0 0 460 460\">\r\n        <path d=\"M184.333,176.333c0,0-2-3.333,0-10c0,0,3.98,0.08,8.417,1.042\r\n\tc4.949,1.073,10.492,3.08,12.25,3.958c0,0-10.571,1.81-12.869,3.113S184.333,176.333,184.333,176.333z\"/>\r\n    </svg>\r\n\r\nconst Eyes4 =\r\n    <svg className={props.crazy} viewBox=\"0 0 460 460\">\r\n        <path d=\"M153.833,236.833c0,0,14.333-7.166,27.5,7.167\r\n\tc0,0-7.909,3.205-17.833,1C159,244,154.667,237.333,153.833,236.833z\"/>\r\n        <path d=\"M218.667,244.667c0,0,4.999-15.833,31.333-3\r\n\tc0,0-6.078,4.536-13.5,5.833c-5.843,1.021-13.117-0.883-14.833-2.333L218.667,244.667z\"/>\r\n    </svg>\r\n\r\nlet ArrayOfEyes = [Eyes0,Eyes1,Eyes2,Eyes3,Eyes4]\r\n\r\n    return (ArrayOfEyes[props.number])\r\n}\r\n\r\nexport default Eyes;","import React from \"react\";\r\n\r\nfunction Nose(props) {\r\n\r\nconst Nose0 =\r\n    <svg className=\"nose\" viewBox=\"0 0 460 460\">\r\n<path onClick={props.onClick} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} d=\"M212,184c-16.333,16.667-34,30-33.333,36.667s7.333,14,11.333,17\r\n\ts16.667,5.666,27,4.333s25.334-6,20.667-15s-3.333-22-2-29.667s3.421-17,2.877-22.667s-3.877-9.667-10.21-8S212,184,212,184z\"/>\r\n</svg>\r\n\r\nconst Nose1 =\r\n    <svg className=\"nose\" viewBox=\"0 0 460 460\">\r\n<path onClick={props.onClick} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} d=\"M351.667,234.667c0,0-4.334-12.334-10.667-6.667\r\n\ts-12.333,7.333-12,19s-9.667,25.333-9.667,30.333s7.667,7.668,16.167,13.334s13.5,7.332,22.5,5.666s11.666-3.667,14.333-12\r\n\ts-1-18.207-4.333-22.604S351.667,234.667,351.667,234.667z\"/>\r\n</svg>\r\n\r\nconst Nose2 =\r\n    <svg className=\"nose\" viewBox=\"0 0 460 460\">\r\n        <path onClick={props.onClick} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} d=\"M136.333,158.333c1.167,4.167-1.167,6.333,0,12.667\r\n\ts-1.833,7-1.167,12.167S133.906,189.5,135.87,194s5.964,7.667,9.297,7.167s7-2.667,12.167-3.667s8.167-0.666,10.833-3.833\r\n\ts9.5-0.667,5.167-7.667s-6.833-10.333-11.833-14.5s-5.833-7.167-9-13.167s-2.833-9.5-6.167-12s-5-3.5-7-1.167\r\n\tS136.333,158.333,136.333,158.333z\"/>\r\n    </svg>\r\n\r\nconst Nose3 =\r\n    <svg className=\"nose\" viewBox=\"0 0 460 460\">\r\n        <path onClick={props.onClick} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} d=\"M161.5,177c-3.5,4.75-10.75,9.25-15.25,17s-12,8-10.75,18.5\r\n\ts-1.25,15,6.5,17.5s12.25,3.5,20.75,1.75S177.5,231,181,225s3.5-6.5,0-17s-6.25-13.5-4.25-22.5s6.5-14.75,2.75-18.5\r\n\ts-8.5-6.25-10.75-6s-4.5,2.5-4.75,8.5S161.5,177,161.5,177z\"/>\r\n    </svg>\r\n\r\nconst Nose4 =\r\n    <svg className=\"nose\" viewBox=\"0 0 460 460\">\r\n        <path onClick={props.onClick} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} d=\"M186.666,244.667c0,4.333-3.333,7.667-3.333,17.667\r\n\ts-6.667,13.999-6.667,21.666s0.667,9,5,17s9.667,13.001,18,10.334s11-6,19.333-8s17-0.333,11-13c-6-12.667-11.334-14.666-17-25\r\n\ts-7-17-6.333-22.667s-1.333-12.334-6.333-12.667s-8,1-10.667,4S186.666,244.667,186.666,244.667z\"/>\r\n    </svg>\r\n\r\nlet ArrayOfNoses = [Nose0,Nose1,Nose2,Nose3,Nose4]\r\n\r\n    return (ArrayOfNoses[props.number])\r\n}\r\n\r\nexport default Nose;","import React, {Component} from 'react';\nimport './App.css';\nimport Eyes from \"./Components/Eyes\";\nimport Nose from \"./Components/Noses\";\n\nlet number = Math.floor(Math.random() * 5)\n\nclass App extends Component {\n\n    state = {\n        link: number,\n        crazy: false\n    }\n\n    handleClick = () => {\n        number = (number + 1 + Math.floor(Math.random()*100) % 4) % 5;\n        this.setState({link: number})\n    }\n\n    handleMouseEnter = () => {\n        this.setState({crazy: true})\n    }\n\n    handleMouseLeave = () => {\n        this.setState({crazy: false})\n    }\n\n    render() {\n        return (\n            <>\n            <div className='instructions'>boop Ji Li's nose to change the picture</div>\n        <div className='body'>\n                <Nose number={number} onClick={this.handleClick} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}/>\n                <Eyes number={number} crazy={this.state.crazy ? \"crazyEyes\" : \"eyes\"}/>\n                <img src={'纪李/JiLi' + this.state.link +'.jpg'} alt={'Unable to load Ji Li'}/>\n            </div>\n                </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}